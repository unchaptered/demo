// prisma db push
datasource db {
  provider = "sqlite"
  url      = "file:demo.db"
}

generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client" // Prisma 클라이언트 코드를 생성할 경로
}

model WebsiteDocument {
  routinId Int

  originUrl String // @db.varchar(255)
  parentUrl String // @db.varchar(255)
  nowUrl    String // @db.varchar(255)

  nowDepth Int
  maxDepth Int

  originDomain String // @db.varchar(255)

  domainType   Int // @db.varchar(255)
  domainOption Int // @db.varchar(255)

  isScrapped        Boolean @default(false)
  isAlreadyScrapped Boolean @default(false)

  isIndexed        Boolean @default(false)
  isAlreadyIndexed Boolean @default(false)

  scrappedHtml String?

  @@id([routinId, originUrl, parentUrl, nowUrl])
}

model WebsiteIndexingDocument {
  id        Int    @id @default(autoincrement())
  routinId  Int
  originUrl String
  parentUrl String
  nowUrl    String

  websiteLink  WebsiteLink[]
  WebsiteImage WebsiteImage[]
  WebsiteVideo WebsiteVideo[]

  @@unique([routinId, originUrl, parentUrl, nowUrl])
}

model WebsiteLink {
  id      Int @id @default(autoincrement())
  indexId Int

  linkType  String // ROOT_DOMAIN, SUB_DOMAIN, OTHER_DOMAIN
  linkValue String // https://~

  webisteIndexingDocument WebsiteIndexingDocument @relation(fields: [indexId], references: [id])
}

model WebsiteImage {
  id      Int @id @default(autoincrement())
  indexId Int

  imageType String // CONTENT_IMAGE, THUMBNAIL_IMAGE, AD_BANNER_IMAGE
  imageSrc  String // https://~
  linkType  String? // ROOT_DOMAIN, SUB_DOMAIN, OTHER_DOMAIN
  linkValue String? // https://~

  webisteIndexingDocument WebsiteIndexingDocument @relation(fields: [indexId], references: [id])
}

model WebsiteVideo {
  id      Int @id @default(autoincrement())
  indexId Int

  videoType String // video lite-iframe
  videoSrc  String // https://~

  webisteIndexingDocument WebsiteIndexingDocument @relation(fields: [indexId], references: [id])
}
